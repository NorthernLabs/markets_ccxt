<?php
namespace ccxt;
include_once (__DIR__.'/../../ccxt.php');
// ----------------------------------------------------------------------------

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

// -----------------------------------------------------------------------------

error_reporting(E_ALL | E_STRICT);
date_default_timezone_set('UTC');

use ccxt\Precise;
use React\Async;
use React\Promise;


// AUTO-TRANSPILE //
function example() {
    return Async\async(function () {
        $exchange = new \ccxt\async\alephx(array(
            'apiKey' => 'API_KEY',
            'secret' => 'SECRET',
            'proxyUrl' => 'http://localhost:4000',
            'urls' => array(
                'api' => array(
                    'rest' => '',
                ),
            ),
        ));
        $exchange->verbose = true; // uncomment for debugging purposes if necessary
        // 1. createOrder
        $symbol = 'CLEO-ALEO';
        $type = 'limit';
        $side = 'buy';
        $amount = 0.1;
        $price = 1.1;
        $params = array(
            'timeInForce' => 'gtc',
            'idempotencyKey' => $exchange->uuid(),
        );
        $new_order = Async\await($exchange->create_order($symbol, $type, $side, $amount, $price, $params));
        var_dump($new_order);
        // 2. fetchOrders
        $orders = Async\await($exchange->fetch_orders());
        var_dump($orders);
        // 3. fetchOrder
        $get_order = Async\await($exchange->fetch_order($new_order['id']));
        var_dump($get_order);
        // 4. cancelOrder
        $cancel_order = Async\await($exchange->cancel_order($new_order['id']));
        var_dump($cancel_order);
        // 5. fetchMyTrades
        $trades = Async\await($exchange->fetch_my_trades());
        var_dump($trades);
    }) ();
}


Async\await(example());
